/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import static Main.LogIn.usersArray;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import static java.util.Arrays.stream;
import static java.util.stream.StreamSupport.stream;
import javax.crypto.Cipher;
import javax.crypto.CipherOutputStream;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SealedObject;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;

/*
-=About HCI=-

In my SignUp Frame I changed the background colour to yellow to keep it different from other JFrames.
With this colour it's easy to read dark text as well as the text in grey colour buttons.
For signing up a new user is required to fill in certain fields so I used a well-known star symbol [*] to mark the required fields.
I created a ‘Clear’ button in case a user wants to clear all areas if he/she made a mistake in any of the fields and wants to start fresh.
The ‘Exit’ button was implemented in case the user wants to leave the application.
If for some reason the user wants to go to ‘Login’ page without registration they can do that by clicking ‘Login’ button.
On the top of the frame I created a ‘Sign Up’ header with bigger text size and a bold font so the user can easily identify what page they are on. 
After the user is registered they will be asked by an alert message if they would like to proceed to a new frame or stay in the same one.
For security reasons the user has to create a username with at least 4 characters and a password with 6 characters.
Each button has a pop up message

-=About Security=-

For security purposes on ‘Sign Up’ page I used the following rules:
A Username has to be at least 4 characters.
A Password should be at least 6 characters.
The user has to fill all required fields so the program can collect as much information about the user as possible. 
The user’s details are encrypted after they complete all registration requirements.

-=Security Issues 

If user creates new user account with existing username, old username will be replaced with new one.  

*/

/**
 *
 * @author w1565407
 */
public class SignUp extends javax.swing.JFrame {
    
    
 ArrayList<Users> usersArray = new ArrayList<Users>();
 private static SecretKey key64 = new SecretKeySpec(new byte[]{0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07}, "Blowfish");
    
    
    public SignUp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSign = new javax.swing.JPanel();
        signEmailLabel = new javax.swing.JLabel();
        signNameLabel = new javax.swing.JLabel();
        signUsernameTf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        signUsernameLabel = new javax.swing.JLabel();
        signEmailTf = new javax.swing.JTextField();
        signPassLabel = new javax.swing.JLabel();
        signNameTf = new javax.swing.JTextField();
        signSignButton = new javax.swing.JButton();
        signClearButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        signExitButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        signLogButton = new javax.swing.JButton();
        signPassTf = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Application v0.1");
        setResizable(false);

        panelSign.setBackground(new java.awt.Color(255, 255, 102));
        panelSign.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        signEmailLabel.setText("*Email:");

        signNameLabel.setText("Name:");

        signUsernameTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUsernameTfActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Sign Up");

        signUsernameLabel.setText("*Username:");

        signPassLabel.setText("*Password:");

        signSignButton.setText("Sign Up");
        signSignButton.setToolTipText("Click to sign up");
        signSignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signSignButtonActionPerformed(evt);
            }
        });

        signClearButton.setText("Clear");
        signClearButton.setToolTipText("Click to clear the text!");
        signClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signClearButtonActionPerformed(evt);
            }
        });

        signExitButton.setText("EXIT");
        signExitButton.setToolTipText("Click to Exit the program");
        signExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signExitButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("* Fields have to be filled in");

        signLogButton.setText("Log In");
        signLogButton.setToolTipText("Click to go to log in page");
        signLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signLogButtonActionPerformed(evt);
            }
        });

        signPassTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signPassTfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSignLayout = new javax.swing.GroupLayout(panelSign);
        panelSign.setLayout(panelSignLayout);
        panelSignLayout.setHorizontalGroup(
            panelSignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSignLayout.createSequentialGroup()
                .addGroup(panelSignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSignLayout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel4))
                    .addGroup(panelSignLayout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelSignLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(panelSignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelSignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(signPassLabel)
                                .addComponent(signUsernameLabel))
                            .addGroup(panelSignLayout.createSequentialGroup()
                                .addGroup(panelSignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(signEmailLabel)
                                    .addComponent(signNameLabel))
                                .addGap(2, 2, 2)))
                        .addGroup(panelSignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelSignLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panelSignLayout.createSequentialGroup()
                                .addComponent(signSignButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(signClearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(signEmailTf)
                            .addComponent(signUsernameTf, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(signPassTf)
                            .addComponent(signNameTf, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(102, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSignLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(signLogButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signExitButton)
                .addGap(9, 9, 9))
        );
        panelSignLayout.setVerticalGroup(
            panelSignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSignLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(panelSignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signUsernameLabel)
                    .addComponent(signUsernameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(panelSignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signPassLabel)
                    .addComponent(signPassTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelSignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signEmailLabel)
                    .addComponent(signEmailTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(panelSignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signNameLabel)
                    .addComponent(signNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(panelSignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signSignButton)
                    .addComponent(signClearButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(panelSignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(signExitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(signLogButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelSign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelSign, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void signUsernameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUsernameTfActionPerformed
    
    }//GEN-LAST:event_signUsernameTfActionPerformed

    private void signClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signClearButtonActionPerformed
        //After pressing clear button all fields will be cleared.
        signUsernameTf.setText("");
        signPassTf.setText("");
        signEmailTf.setText("");
        signNameTf.setText("");
    }//GEN-LAST:event_signClearButtonActionPerformed

    private void signExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signExitButtonActionPerformed
        //Exits the application
        System.exit(0);
    }//GEN-LAST:event_signExitButtonActionPerformed

    private void signSignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signSignButtonActionPerformed
        //Stores value from typed fields in Sign Up
        String username = signUsernameTf.getText();
        String password = signPassTf.getText();
        String email = signEmailTf.getText();
        String name = signNameTf.getText();
        
        //Creates User Object
        Users u = new Users(username, password, email, name);
        usersArray.add(u);
        
        //File writer 
        FileWriter output = null;
        
        //Checks if fields are not empty and if username exists*
        if(username.equals("") || password.equals("") || email.equals("")){
            JOptionPane.showMessageDialog(null, "Please fill in all required entry fields");
        }else{
        try{
                //Security option if username.length() >= 4 and password.length() >= 6 print JOptionPane Message 
                //saying that 
            if(username.length() >= 4 && password.length() >= 6){
            
            
           /*
            If username is already registered it will override twice 
            */
            //Scans userArray for username
//            for (int i = 0; i < usersArray.size(); i++) {
//                //compares username with textfield
//            if (username.equals(usersArray.get(i).getUsername())) {
//            JOptionPane.showMessageDialog(null, "Username you entered already exists. Please choose different username!");
//            }else{         
            
            //Creates users.txt file
            output = new FileWriter("users.txt");
            
            //Encrypts usersArray 
            encrypt(usersArray);
            //Stops the filewriter
            output.close();
            //Prints the in line
            System.out.println("File was created!");
            
            //After file was created each field becomes empty again so user cannot create many empty(fake) users. // Stability option !!
            signUsernameTf.setText("");
            signPassTf.setText("");
            signEmailTf.setText("");
            signNameTf.setText("");
            //Brings JOptionPane with information.
            int loginPage = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog (null, "Would you like to go to Login page?","Suggestion",loginPage);
            if(dialogResult == 0) {
        LogIn logIn = new LogIn();
        logIn.setVisible(true);
        dispose();
        
        }   
            }else{
                JOptionPane.showMessageDialog(null, "Please insert the Username with atleast 4 characters or Password with atleast 6 characters ");
            }
      
            //Catch Exceptions with error handling
//            }}
        }catch (IOException | NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | IllegalBlockSizeException | HeadlessException error) {
            System.out.println("Could not write file!");
            System.out.println(error.toString());
        }
        }

    }//GEN-LAST:event_signSignButtonActionPerformed
   
    //Encryption system
    public static void encrypt(ArrayList array) throws NoSuchAlgorithmException,
        NoSuchPaddingException, java.security.InvalidKeyException,
        IOException, IllegalBlockSizeException {
              
        Cipher cipher = Cipher.getInstance("Blowfish");
        cipher.init(Cipher.ENCRYPT_MODE, key64);
        SealedObject sealedObject = new SealedObject(array, cipher);
        CipherOutputStream cos = new CipherOutputStream(new FileOutputStream("users.txt"), cipher);
        ObjectOutputStream oos = new ObjectOutputStream(cos);
        oos.writeObject(sealedObject);
        oos.close();
               
    }
    private void signLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signLogButtonActionPerformed
        //Goes to login page
        LogIn logIn = new LogIn();
        logIn.setVisible(true);
        dispose();
    }//GEN-LAST:event_signLogButtonActionPerformed

    private void signPassTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signPassTfActionPerformed
      
    }//GEN-LAST:event_signPassTfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel panelSign;
    private javax.swing.JButton signClearButton;
    private javax.swing.JLabel signEmailLabel;
    private javax.swing.JTextField signEmailTf;
    private javax.swing.JButton signExitButton;
    private javax.swing.JButton signLogButton;
    private javax.swing.JLabel signNameLabel;
    private javax.swing.JTextField signNameTf;
    private javax.swing.JLabel signPassLabel;
    private javax.swing.JPasswordField signPassTf;
    private javax.swing.JButton signSignButton;
    private javax.swing.JLabel signUsernameLabel;
    public static javax.swing.JTextField signUsernameTf;
    // End of variables declaration//GEN-END:variables

    
}
